{"version":3,"sources":["scripts/main.js"],"names":["listUrl","detailUrl","phonesWithDetails","getPhones","Promise","resolve","setTimeout","Error","fetch","then","response","ok","json","catch","error","console","warn","getPhonesDetails","listPhones","body","document","querySelector","list","createElement","forEach","phone","li","innerText","name","append","push","replace","id","reject","result","p","details"],"mappings":";AAAA,aAEA,IAAMA,EAAU,wEAEVC,EAAY,iFACZC,EAAoB,GAEpBC,EAAY,WACT,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACH,MAAA,IAAIC,MAAM,aACf,KAEHC,MAAMR,GACHS,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIJ,MAAV,wBAGFF,EAAQK,EAASE,UAChBC,MAAM,SAAAC,GAEPC,QAAQC,KAAKF,QAKrB,SAASG,EAAiBC,GAClBC,IAAAA,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASG,cAAc,MAEpCL,EAAWM,QAAQ,SAAAC,GACXC,IAAAA,EAAKN,SAASG,cAAc,MAElCG,EAAGC,UAAYF,EAAMG,KACrBN,EAAKO,OAAOH,GACZxB,EAAkB4B,KAAKL,GAEvBjB,MAAMP,EAAU8B,QAAQ,WAAYN,EAAMO,KACvCvB,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHPR,QAAQ6B,OAAO,IAAI1B,MAAnB,2BAKVE,KAAK,SAAAyB,GACJhC,EAAkBsB,QAAQ,SAAAW,GACpBA,EAAEH,KAAOE,EAAOF,KAClBG,EAAEC,QAAUF,OAGfrB,MAAM,SAAAC,GAEPC,QAAQC,KAAKF,OAInBK,EAAKU,OAAOP,GAGdnB,IACGM,KAAK,SAAAyB,GACJjB,EAAiBiB,KAElBrB,MAAM,SAAAC,GAELC,QAAQC,KAAKF","file":"main.32310fb2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n// eslint-disable-next-line\nconst listUrl = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n// eslint-disable-next-line\nconst detailUrl = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/:phoneId.json';\nconst phonesWithDetails = [];\n\nconst getPhones = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      throw new Error('Time out');\n    }, 5000);\n\n    fetch(listUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Can't load this page`);\n        }\n\n        resolve(response.json());\n      }).catch(error => {\n        // eslint-disable-next-line\n        console.warn(error);\n      });\n  });\n};\n\nfunction getPhonesDetails(listPhones) {\n  const body = document.querySelector('body');\n  const list = document.createElement('ul');\n\n  listPhones.forEach(phone => {\n    const li = document.createElement('li');\n\n    li.innerText = phone.name;\n    list.append(li);\n    phonesWithDetails.push(phone);\n\n    fetch(detailUrl.replace(':phoneId', phone.id))\n      .then(response => {\n        if (!response.ok) {\n          return Promise.reject(new Error(`Can't load this page`));\n        }\n\n        return response.json();\n      })\n      .then(result => {\n        phonesWithDetails.forEach(p => {\n          if (p.id === result.id) {\n            p.details = result;\n          }\n        });\n      }).catch(error => {\n        // eslint-disable-next-line\n        console.warn(error);\n      });\n  });\n\n  body.append(list);\n}\n\ngetPhones()\n  .then(result => {\n    getPhonesDetails(result);\n  })\n  .catch(error => {\n    // eslint-disable-next-line\n    console.warn(error);\n  });\n"]}